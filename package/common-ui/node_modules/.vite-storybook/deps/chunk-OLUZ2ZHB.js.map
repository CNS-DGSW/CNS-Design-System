{
  "version": 3,
  "sources": ["../../../../../.yarn/unplugged/core-js-npm-3.29.1-baa30db121/node_modules/core-js/modules/es.string.split.js"],
  "sourcesContent": ["'use strict';\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar arraySlice = require('../internals/array-slice-simple');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar MAX_UINT32 = 0xFFFFFFFF;\nvar min = Math.min;\nvar $push = [].push;\nvar exec = uncurryThis(/./.exec);\nvar push = uncurryThis($push);\nvar stringSlice = uncurryThis(''.slice);\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return call(nativeSplit, string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = call(regexpExec, separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          push(output, stringSlice(string, lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !exec(separatorCopy, '')) push(output, '');\n      } else push(output, stringSlice(string, lastLastIndex));\n      return output.length > lim ? arraySlice(output, 0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = isNullOrUndefined(separator) ? undefined : getMethod(separator, SPLIT);\n      return splitter\n        ? call(splitter, separator, O, limit)\n        : call(internalSplit, toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          push(A, stringSlice(S, p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            push(A, z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      push(A, stringSlice(S, p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n"],
  "mappings": "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",
  "names": []
}
