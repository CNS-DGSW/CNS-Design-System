import {
  require_correct_is_regexp_logic,
  require_not_a_regexp
} from "./chunk-SK7S7JOK.js";
import {
  require_to_string
} from "./chunk-KSWJJUVF.js";
import {
  require_export,
  require_function_uncurry_this_clause,
  require_is_pure,
  require_object_get_own_property_descriptor,
  require_require_object_coercible,
  require_to_length
} from "./chunk-JUVUO6NV.js";

// ../../.yarn/unplugged/core-js-npm-3.29.1-baa30db121/node_modules/core-js/modules/es.string.ends-with.js
var $ = require_export();
var uncurryThis = require_function_uncurry_this_clause();
var getOwnPropertyDescriptor = require_object_get_own_property_descriptor().f;
var toLength = require_to_length();
var toString = require_to_string();
var notARegExp = require_not_a_regexp();
var requireObjectCoercible = require_require_object_coercible();
var correctIsRegExpLogic = require_correct_is_regexp_logic();
var IS_PURE = require_is_pure();
var nativeEndsWith = uncurryThis("".endsWith);
var slice = uncurryThis("".slice);
var min = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic("endsWith");
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function() {
  var descriptor = getOwnPropertyDescriptor(String.prototype, "endsWith");
  return descriptor && !descriptor.writable;
}();
$({ target: "String", proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : void 0;
    var len = that.length;
    var end = endPosition === void 0 ? len : min(toLength(endPosition), len);
    var search = toString(searchString);
    return nativeEndsWith ? nativeEndsWith(that, search, end) : slice(that, end - search.length, end) === search;
  }
});
//# sourceMappingURL=chunk-RA2WLQSQ.js.map
