import {
  require_react_dom
} from "./chunk-HBJ6AMBN.js";
import {
  require_react
} from "./chunk-RJMQKCCQ.js";
import {
  require_runtime
} from "./chunk-SYGE5UKW.js";
import "./chunk-P5JPMOPK.js";
import "./chunk-OYWAVUZ6.js";
import "./chunk-LONHCDZP.js";
import "./chunk-JUVUO6NV.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// ../../.yarn/__virtual__/@storybook-preview-web-virtual-24ccd8b583/0/cache/@storybook-preview-web-npm-6.5.16-76bcc4f64f-6161c96e9e.zip/node_modules/@storybook/preview-web/dist/esm/renderDocs.js
var import_runtime = __toESM(require_runtime());
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// ../../.yarn/__virtual__/@storybook-preview-web-virtual-24ccd8b583/0/cache/@storybook-preview-web-npm-6.5.16-76bcc4f64f-6161c96e9e.zip/node_modules/@storybook/preview-web/dist/esm/NoDocs.js
var import_react = __toESM(require_react());
var wrapper = {
  fontSize: "14px",
  letterSpacing: "0.2px",
  margin: "10px 0"
};
var main = {
  margin: "auto",
  padding: 30,
  borderRadius: 10,
  background: "rgba(0,0,0,0.03)"
};
var heading = {
  textAlign: "center"
};
var NoDocs = function NoDocs2() {
  return import_react.default.createElement("div", {
    style: wrapper,
    className: "sb-nodocs sb-wrapper"
  }, import_react.default.createElement("div", {
    style: main
  }, import_react.default.createElement("h1", {
    style: heading
  }, "No Docs"), import_react.default.createElement("p", null, "Sorry, but there are no docs for the selected story. To add them, set the story'sÂ ", import_react.default.createElement("code", null, "docs"), " parameter. If you think this is an error:"), import_react.default.createElement("ul", null, import_react.default.createElement("li", null, "Please check the story definition."), import_react.default.createElement("li", null, "Please check the Storybook config."), import_react.default.createElement("li", null, "Try reloading the page.")), import_react.default.createElement("p", null, "If the problem persists, check the browser console, or the terminal you've run Storybook from.")));
};
NoDocs.displayName = "NoDocs";

// ../../.yarn/__virtual__/@storybook-preview-web-virtual-24ccd8b583/0/cache/@storybook-preview-web-npm-6.5.16-76bcc4f64f-6161c96e9e.zip/node_modules/@storybook/preview-web/dist/esm/renderDocs.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function renderDocs(story, docsContext, element, callback) {
  return renderDocsAsync(story, docsContext, element).then(callback);
}
function renderDocsAsync(_x, _x2, _x3) {
  return _renderDocsAsync.apply(this, arguments);
}
function _renderDocsAsync() {
  _renderDocsAsync = _asyncToGenerator(regeneratorRuntime.mark(function _callee(story, docsContext, element) {
    var _docs$getContainer, _docs$getPage;
    var docs, DocsContainer, Page, docsElement;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            docs = story.parameters.docs;
            if (!((docs !== null && docs !== void 0 && docs.getPage || docs !== null && docs !== void 0 && docs.page) && !(docs !== null && docs !== void 0 && docs.getContainer || docs !== null && docs !== void 0 && docs.container))) {
              _context.next = 3;
              break;
            }
            throw new Error("No `docs.container` set, did you run `addon-docs/preset`?");
          case 3:
            _context.t1 = docs.container;
            if (_context.t1) {
              _context.next = 8;
              break;
            }
            _context.next = 7;
            return (_docs$getContainer = docs.getContainer) === null || _docs$getContainer === void 0 ? void 0 : _docs$getContainer.call(docs);
          case 7:
            _context.t1 = _context.sent;
          case 8:
            _context.t0 = _context.t1;
            if (_context.t0) {
              _context.next = 11;
              break;
            }
            _context.t0 = function(_ref) {
              var children = _ref.children;
              return import_react2.default.createElement(import_react2.default.Fragment, null, children);
            };
          case 11:
            DocsContainer = _context.t0;
            _context.t3 = docs.page;
            if (_context.t3) {
              _context.next = 17;
              break;
            }
            _context.next = 16;
            return (_docs$getPage = docs.getPage) === null || _docs$getPage === void 0 ? void 0 : _docs$getPage.call(docs);
          case 16:
            _context.t3 = _context.sent;
          case 17:
            _context.t2 = _context.t3;
            if (_context.t2) {
              _context.next = 20;
              break;
            }
            _context.t2 = NoDocs;
          case 20:
            Page = _context.t2;
            docsElement = import_react2.default.createElement(DocsContainer, {
              key: story.componentId,
              context: docsContext
            }, import_react2.default.createElement(Page, null));
            _context.next = 24;
            return new Promise(function(resolve) {
              import_react_dom.default.render(docsElement, element, resolve);
            });
          case 24:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _renderDocsAsync.apply(this, arguments);
}
function unmountDocs(element) {
  import_react_dom.default.unmountComponentAtNode(element);
}
export {
  renderDocs,
  unmountDocs
};
//# sourceMappingURL=renderDocs-LQSZN46Q.js.map
